name: CD

on: 
  push:
    tags: 'v*'

jobs:
  build-linux:
    runs-on: ubuntu-18.04
    container: ${{ matrix.config.container }}
    strategy:
      matrix:
        config:
        - {container: "geodesolutions/ubuntu", system: "ubuntu"}
        - {container: "geodesolutions/centos", system: "rhel"}

    steps:
    - uses: actions/checkout@v1
    - name: Cache node modules
      uses: actions/cache@v1.2.0
      with:
        path: node_modules
        key: node-${{ matrix.config.system }}-${{ hashFiles('package-lock.json') }}
    - name: Compile
      run: |
        version="${GITHUB_REF##*/*/}"
        echo ::set-output name=version::$version
        export VERSION=$version
        npm install
        npm run electron:package
      env:
        PLATFORM: ${{ matrix.config.system }}
    - name: Upload
      uses: softprops/action-gh-release@v1
      with:
        files: "geode-${{ steps.package.outputs.version }}-${{ matrix.config.system }}.tar.gz"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Notify slack
      if: failure() && github.ref == 'refs/heads/master'
      uses: 8398a7/action-slack@v2
      with:
        status: failure
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      
  build-mac:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v1
    - name: Cache node modules
      uses: actions/cache@v1.2.0
      with:
        path: node_modules
        key: node-darwin-${{ hashFiles('package-lock.json') }}
    - name: Compile
      run: |
        version="${GITHUB_REF##*/*/}"
        echo ::set-output name=version::$version
        export VERSION=$version
        npm install
        npm run electron:package
      env:
        PLATFORM: "darwin"
    - name: Upload
      uses: softprops/action-gh-release@v1
      with:
        files: "geode-${{ steps.package.outputs.version }}-darwin.tar.gz"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Notify slack
      if: failure() && github.ref == 'refs/heads/master'
      uses: 8398a7/action-slack@v2
      with:
        status: failure
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      
  build-windows:
    runs-on: windows-2016

    steps:
    - uses: actions/checkout@v1
    - name: Cache node modules
      uses: actions/cache@v1.2.0
      with:
        path: node_modules
        key: node-win64-${{ hashFiles('package-lock.json') }}
    - name: Compile
      run: |
        $version = ${env:GITHUB_REF} -replace 'refs\/tags\/', ''
        echo "::set-output name=version::$version"
        $env:VERSION = $version
        npm install
        npm run electron:package
      env:
        PLATFORM: "win64"
    - name: Upload
      uses: softprops/action-gh-release@v1
      with:
        files: "geode-${{ steps.package.outputs.version }}-win64.zip"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Notify slack
      if: failure() && github.ref == 'refs/heads/master'
      uses: 8398a7/action-slack@v2
      with:
        status: failure
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
