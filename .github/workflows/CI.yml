name: CI

on: 
  push:
  pull_request:

jobs:
  build-linux:
    runs-on: ubuntu-18.04
    container: ${{ matrix.config.container }}
    strategy:
      matrix:
        config:
        - {container: "geodesolutions/ubuntu", system: "ubuntu", python: 3.6}
        - {container: "geodesolutions/ubuntu", system: "ubuntu", python: 3.7}
        - {container: "geodesolutions/ubuntu", system: "ubuntu", python: 3.8}
        - {container: "geodesolutions/centos", system: "rhel", python: 2.7}

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.config.python }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.config.python }}
    - name: Cache node modules
      uses: actions/cache@v1.2.0
      with:
        path: node_modules
        key: node-${{ matrix.config.system }}-${{ matrix.config.python }}-${{ hashFiles('package-lock.json') }}
    - name: Compile
      run: |
        export Python3_ROOT_DIR=$pythonLocation
        echo $Python3_ROOT_DIR
        npm config set cmake_PYTHON_VERSION ${{ matrix.config.python }}
        npm install
        npm run electron:package
      env:
        VERSION: "unknown"
        PLATFORM: ${{ matrix.config.system }}
    - name: Notify slack
      if: failure() && github.ref == 'refs/heads/master'
      uses: 8398a7/action-slack@v2
      with:
        status: failure
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      
  build-mac:
    runs-on: macos-latest
    strategy:
      matrix:
        python: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}
    - name: Cache node modules
      uses: actions/cache@v1.2.0
      with:
        path: node_modules
        key: node-darwin-${{ matrix.python }}-${{ hashFiles('package-lock.json') }}
    - name: Compile
      run: |
        export Python3_ROOT_DIR=$pythonLocation
        echo $Python3_ROOT_DIR
        npm config set cmake_PYTHON_VERSION ${{ matrix.python }}
        npm install
        npm run electron:package
      env:
        VERSION: "unknown"
        PLATFORM: ${{ matrix.config.system }}
    - name: Notify slack
      if: failure() && github.ref == 'refs/heads/master'
      uses: 8398a7/action-slack@v2
      with:
        status: failure
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      
  build-windows:
    runs-on: windows-2016
    strategy:
      matrix:
        python: [3.6, 3.7]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}
    - name: Cache node modules
      uses: actions/cache@v1.2.0
      with:
        path: node_modules
        key: node-win64-${{ matrix.python }}-${{ hashFiles('package-lock.json') }}
    - name: Compile
      run: |
        $Env:Python3_ROOT_DIR=$Env:pythonLocation
        echo $Env:Python3_ROOT_DIR
        npm config set cmake_PYTHON_VERSION ${{ matrix.python }}
        npm install
        # npm run electron:package
      env:
        VERSION: "unknown"
        PLATFORM: ${{ matrix.config.system }}
    - name: Notify slack
      if: failure() && github.ref == 'refs/heads/master'
      uses: 8398a7/action-slack@v2
      with:
        status: failure
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      
  semantic-release:
    runs-on: ubuntu-18.04
    needs: [build-linux, build-mac, build-windows]
    steps:
    - uses: actions/checkout@v1
    - run: npx semantic-release
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
